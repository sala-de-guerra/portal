{"version":3,"sources":["moment-holiday.js","argentina.js","brazil.js", "canada.js","croatia.js","denmark.js","easter.js","finland.js","germany.js","india.js","united_states.js"],"names":["moment","require","amd","this","parserExtensions","parseHoliday","self","date","adjust","pd","days","i","length","pe","isMoment","charAt","match","range","dates","split","m","ds","td","ii","push","year","parseInt","month","w","slice","wd","dt","d","startOf","limit","endOf","diff","wds","forward","wi","day","add","subtract","ai","concat","di","arrayify","keywordMatches","str","kw","f","RegExp","findHoliday","holiday","parse","holidayObj","pt","wn","obj","h","holidays","active","hasOwnProperty","fk","findKey","hd","filter","keywords_n","keywords_y","matchesY","keywords","matches","Object","keys","findHolidays","find","merge","getAllHolidays","compileRegions","locale","regions","o","r","toLowerCase","l","y","n","regions_n","join","indexOf","getLocale","replace","shift","path","__dirname","pop","e","holidayLoop","count","b","b2","ha","hi","isSame","arr","constructor","Array","o1","o2","assign","fn","single","dKeys","isHoliday","returnTitle","hs","previousHoliday","previousHolidays","nextHoliday","nextHolidays","holidaysBetween","Date","active_last","modifyHolidays","set","specifics","newH","k","is","remove","undo","c","load","locales","extendParser","func","module","exports","call","argentina","Año Nuevo","Lunes de Carnival","Martes de Carnival","Día de la Memoria por la Verdad y la Justicia","Día del Veterano de Guerra y los Caídos en las Islas Malvinas","Jueves Santo","Viernes Santo","Día de Acción por la tolerancia y el respeto entre los pueblos","Día del Trabajador","Día de la Revolución de Mayo","Día Paso a la Inmortalidad del Gral. Manual Belgrano","Día de la Independencia","Paso a la Inmortalidad del Gral. José de San Martín","Día del Respeto a la Diversidad Cultural","Día de la Soberanía Nacional","Navidad","canada","New Year's Day","Valentine's Day","Islander Day","Family Day","Louis Riel Day","Saint Patrick's Day","Good Friday","Easter Sunday","Victoria Day","Mother's Day","Father's Day","Aboriginal Day","Saint Jean Baptiste Day","Canada Day","Civic Day","Labour Day","Halloween","Remembrance Day","Thanksgiving Day","Christmas Day","Boxing Day","croatia","Nova Godina","Bogojavljenje","Uskrs","Uskrsni ponedjeljak","Praznik rada","Tijelovo","Dan antifašističke borbe","Dan državnosti","Dan zahvalnosti","Velika Gospa","Dan neovisnosti","Dan svih svetih","Božić","Sveti Stjepan","denmark","Nytårsdag","Skærfredag","Påske","Anden påskedag","Første maj","Kristi himmelfart","kaywords","Pinse","Anden pinse","Juleaften","Anden juledag","easter","Ash Wednesday","Lent","Maundy Thursday","Holy Saturday","Easter Monday","Ascension Day","Pentecost Sunday","Whit Monday","Corpus Christi","Math","floor","j","substring","format","finland","Uudenvuodenpäivä","Loppiainen","Vappu","Juhannuspäivä","Pyhäinpäivä","Joulupäivä","Tapaninpäivä","Pitkäperjantai","Pääsiäispäivä","Toinen Pääsiäispäivä","Helatorstai","germany","Neujahrstag","Karfreitag","Ostersonntag","Ostermontag","Heilige Drei Könige","Maifeiertag","Christi Himmelfahrt","Pfingstsonntag","Pfingstmontag","Fronleichnam","Mariä Himmelfahrt","Tag der deutschen Einheit","Reformationstag","Allerheiligen","Buß- und Bettag","Weihnachten","Zweiter Weihnachtsfeiertag","india","Republic Day","Mahavir Jayanti","May Day","Independence Day","Gandhi Jayanti","united_states","Martin Luther King Jr. Day","Washington's Birthday","Memorial Day","Labor Day","Columbus Day","Veteran's Day","Day after Thanksgiving","Christmas Eve","New Year's Eve"],"mappings":"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","file":"moment-holiday-pkg.min.js","sourcesContent":["//! moment-holiday.js\n//! version : 1.5.1\n//! author : Kodie Grantham\n//! license : MIT\n//! https://github.com/kodie/moment-holiday\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  var parserExtensions = [];\n\n  var parseHoliday = function(self, date, adjust) {\n    var days = [], pd;\n\n    for (var i = 0; i < parserExtensions.length; i++) {\n      var pe = parserExtensions[i](self, date);\n      if (pe || pe === false) { pd = pe; }\n    }\n\n    if (pd === false) { return false; }\n    if (typeof pd === 'string') { date = pd; } else if (pd) { days = pd; }\n\n    if (!moment.isMoment(days) && !days.length && date.charAt(0).match(/[0-9(]/)) {\n      var range = false;\n      var dates = date.split('|');\n\n      if (dates.length > 1) { range = true; }\n      if (dates.length > 2) { dates = [dates[0], dates[1]]; }\n\n      for (var i = 0; i < dates.length; i++) {\n        var m = moment(self);\n        var ds = dates[i].split('/');\n\n        if (ds.length === 1 || (ds.length === 2 && ds[1].charAt(0) !== '(' && ds[1].length === 4)) {\n          var td = dates[i];\n          i = -1;\n          dates = [];\n          for (var ii = 1; ii < 13; ii++) { dates.push(ii + '/' + td); }\n          continue;\n        }\n\n        if (ds.length > 2) { m.year(parseInt(ds[2])); }\n\n        m.month((parseInt(ds[0]) - 1));\n\n        if (ds[1].charAt(0) === '(') {\n          var w = ds[1].slice(1, -1).split(',');\n          var wd = parseInt(w[0]);\n          var dt = parseInt(w[1]);\n          var d = moment(m).startOf('month');\n          var limit = (moment(m).endOf('month').diff(d, 'days') + 1);\n          var wds = [];\n\n          if (w[1] && w[1].charAt(0) === '[') {\n            var forward = true;\n            dt = parseInt(w[1].slice(1, -1));\n\n            if (dt < 0) {\n              forward = false;\n              dt = parseInt(w[1].slice(2, -1));\n            }\n\n            d = moment(m).date(dt);\n\n            for (var wi = 0; wi < 7; wi++) {\n              if (d.day() === wd) { days.push(moment(d)); break; }\n\n              if (forward) {\n                d.add(1, 'day');\n              } else {\n                d.subtract(1, 'day');\n              }\n            }\n\n            continue;\n          }\n\n          for (var ai = 0; ai < limit; ai++) {\n            if (d.day() === wd) { wds.push(moment(d)); }\n            d.add(1, 'day');\n          }\n\n          if (!dt) {\n            days = days.concat(wds);\n            continue;\n          } else if (dt < 0) {\n            m = wds[wds.length + dt];\n          } else {\n            m = wds[dt - 1];\n          }\n\n          days.push(m);\n        } else {\n          days.push(m.date(ds[1]));\n        }\n      }\n\n      if (range && days.length > 1) {\n        var diff = days[1].diff(days[0], 'days');\n\n        if (diff > 1) {\n          var di = moment(days[0]);\n          days = [days[0]];\n\n          for (var i = 0; i < diff; i++) {\n            di.add(1, 'day');\n            days.push(moment(di));\n          }\n        }\n      }\n    }\n\n    days = arrayify(days);\n\n    for (var i = 0; i < days.length; i++) {\n      if (!moment.isMoment(days[i])) { delete(days[i]); continue; }\n\n      if (adjust) {\n        if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\n        if (days[i].day() === 6) { days[i] = days[i].subtract(1, 'day'); }\n      }\n\n      days[i] = days[i].startOf('day');\n    }\n\n    if (!days.length) { return false; }\n    if (days.length === 1) { return days[0]; }\n\n    return days;\n  };\n\n  var keywordMatches = function(str, kw) {\n    var m = [];\n    kw = arrayify(kw);\n\n    for (var i = 0; i < kw.length; i++) {\n      var f = str.match(new RegExp(kw[i], 'gi'));\n      if (f) { m = m.concat(f); }\n    }\n\n    return m;\n  };\n\n  var findHoliday = function(self, holiday, adjust, parse, holidayObj) {\n    var pt = {};\n    var wn = [];\n    var obj = {};\n\n    h = holidayObj || moment.holidays.active;\n\n    if (h.hasOwnProperty(holiday)) {\n      wn.push(holiday);\n    } else if (fk = findKey(holiday, h)) {\n      wn.push(fk);\n    } else {\n      for (var hd in h) {\n        if (!h.hasOwnProperty(hd)) { continue; }\n\n        pt[hd] = keywordMatches(holiday, hd.split(/[\\s,.-]+/).filter(function(w){ return w.length > 2; })).length;\n\n        if (h[hd].keywords_n) {\n          var matchesN = keywordMatches(holiday, h[hd].keywords_n);\n          if (matchesN.length) {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords_y) {\n          var matchesY = keywordMatches(holiday, h[hd].keywords_y);\n          if (matchesY && matchesY.length === h[hd].keywords_y.length) {\n            pt[hd] += matchesY.length;\n          } else {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords) {\n          var matches = keywordMatches(holiday, h[hd].keywords);\n          if (matches) {\n            pt[hd] += matches.length;\n          } else {\n            continue;\n          }\n        }\n      }\n\n      //console.log(pt); // Display scores\n\n      for (var w in pt) {\n        if (!pt[w] || !pt.hasOwnProperty(w)) { continue; }\n        if (!wn.length || pt[w] === pt[wn[0]]) { wn.push(w); continue; }\n        if (pt[w] > pt[wn[0]]) { wn = [w]; continue; }\n      }\n    }\n\n    if (!wn.length) { return false; }\n\n    if (parse !== false) {\n      for (var i = 0; i < wn.length; i++) {\n        var d = parseHoliday(self, h[wn[i]].date, adjust);\n        if (d) { obj[wn[i]] = d; }\n      }\n\n      if (Object.keys(obj).length) { return obj; }\n    } else {\n      return wn;\n    }\n\n    return false;\n  };\n\n  var findHolidays = function(self, holidays, adjust, parse, holidayObj) {\n    var h = [];\n    if (parse) { h = {}; }\n\n    holidays = arrayify(holidays);\n    if (!holidayObj) { holidayObj = moment.holidays.active; }\n\n    for (var i = 0; i < holidays.length; i++) {\n      var find = findHoliday(self, holidays[i], adjust, parse, holidayObj);\n\n      if (find) {\n        if (parse) {\n          h = merge(h, find);\n        } else {\n          h = h.concat(find);\n        }\n      }\n    }\n\n    return h;\n  };\n\n  var getAllHolidays = function(self, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n      if (td = parseHoliday(self, h[hd].date, adjust)) { d[hd] = td; }\n    }\n\n    return d;\n  };\n\n  var compileRegions = function(locale, regions) {\n    var h = moment.holidays[locale];\n    var o = {};\n\n    if (h) {\n      for (var i = 0; i < regions.length; i++) {\n        var r = regions[i].toLowerCase();\n        var l = moment.holidays[locale + '/' + r];\n        l = {};\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var y = h[hd].regions || [];\n          var n = h[hd].regions_n || [];\n\n          if (y.length) { y.join().toLowerCase().split(); }\n          if (n.length) { n.join().toLowerCase().split(); }\n\n          if ((!y.length && !n.length) || (y.length && ~y.indexOf(r)) || (n.length && !~n.indexOf(r))) {\n            l[hd] = h[hd];\n          }\n        }\n\n        if (l) { o = merge(o, l); }\n      }\n    }\n\n    if (!Object.keys(o).length) { return false; }\n\n    return o;\n  };\n\n  var getLocale = function(locale) {\n    regions = locale.split('/');\n    locale = regions[0].toLowerCase().replace(' ', '_');\n    regions.shift();\n\n    if (!moment.holidays[locale]) {\n      try {\n        var path = './locale/';\n        if (__dirname.split('/').slice(-1).pop() == 'build') { path = '.' + path; }\n        require(path + locale);\n      } catch(e) { }\n    }\n\n    if (moment.holidays[locale]) {\n      if (regions.length) { return compileRegions(locale, regions); }\n      return moment.holidays[locale];\n    }\n\n    return false;\n  };\n\n  var holidayLoop = function(self, count, forward, adjust) {\n    if (!count) { count = 1; }\n\n    var h = getAllHolidays(self, adjust);\n    var l = moment(self);\n    var y = self.year();\n    var w = [];\n\n    for (var i = 0; i < count; i++) {\n      var d = moment(l);\n\n      while (true) {\n        var b = false;\n\n        if (forward) {\n          d.add(1, 'day');\n        } else {\n          d.subtract(1, 'day');\n        }\n\n        if (d.year() !== y) {\n          h = getAllHolidays(d, adjust);\n          y = d.year();\n        }\n\n        if (!Object.keys(h).length) { b = true; break; }\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var b2 = false;\n          var ha = arrayify(h[hd]);\n\n          for (var hi = 0; hi < ha.length; hi++) {\n            if (d.isSame(ha[hi], 'day')) {\n              w.push(ha[hi]);\n              l = moment(d);\n              b2 = true;\n              break;\n            }\n          }\n\n          if (b2) { b = true; break; }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n    if (w.length === 1) { return w[0]; }\n\n    return w;\n  };\n\n  var arrayify = function(arr) {\n    if (arr && arr.constructor !== Array) { return [arr]; }\n    return arr;\n  };\n\n  var findKey = function(find, obj) {\n    if (obj.constructor === Object) { obj = Object.keys(obj); }\n    for (var i = 0; i < obj.length; i++) {\n      if (find.toLowerCase() === obj[i].toLowerCase()) { return obj[i]; }\n    }\n    return false;\n  };\n\n  var merge = function(o1, o2) {\n    return Object.assign({}, o1, o2);\n  };\n\n  moment.fn.holiday = function(holidays, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n    var single = false;\n\n    if (!holidays) {\n      d = getAllHolidays(this, adjust);\n    } else {\n      if (holidays.constructor !== Array) {\n        single = true;\n        holidays = [holidays];\n      }\n\n      for (var i = 0; i < holidays.length; i++) {\n        if (td = findHoliday(this, holidays[i], adjust)) { d = Object.assign({}, d, td); }\n      }\n    }\n\n    var dKeys = Object.keys(d);\n\n    if (!dKeys.length) { return false; }\n    if (dKeys.length === 1 && single) { return d[dKeys[0]]; }\n\n    return d;\n  };\n\n  moment.fn.holidays = function(holidays, adjust) {\n    return this.holiday(holidays, adjust);\n  };\n\n  moment.fn.isHoliday = function(holidays, adjust) {\n    var h, returnTitle, hs = [];\n\n    if (holidays) {\n      holidays = arrayify(holidays);\n      h = this.holiday(holidays, adjust);\n      returnTitle = false;\n    } else {\n      h = getAllHolidays(this, adjust);\n      returnTitle = true;\n    }\n\n    if (!h) { return false; }\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n\n      var ha = arrayify(h[hd]);\n\n      for (var hi = 0; hi < ha.length; hi++) {\n        if (this.isSame(ha[hi], 'day')) {\n          if (returnTitle) {\n            hs.push(hd);\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (hs.length) {\n      if (hs.length === 1) { return hs[0]; }\n      return hs;\n    }\n\n    return false;\n  };\n\n  moment.fn.previousHoliday = function(count, adjust) {\n    return holidayLoop(this, count, false, adjust);\n  };\n\n  moment.fn.previousHolidays = function(count, adjust) {\n    return this.previousHoliday(count, adjust);\n  };\n\n  moment.fn.nextHoliday = function(count, adjust) {\n    return holidayLoop(this, count, true, adjust);\n  };\n\n  moment.fn.nextHolidays = function(count, adjust) {\n    return this.nextHoliday(count, adjust);\n  };\n\n  moment.fn.holidaysBetween = function(date, adjust) {\n    if (!date) { date = new Date(); }\n    date = moment(date).subtract(1, 'day');\n\n    var h = getAllHolidays(this, adjust);\n    var d = moment(this);\n    var y = d.year();\n    var w = [];\n\n    for (var i = 0; i < date.diff(this, 'days'); i++) {\n      d.add(1, 'day');\n\n      if (d.year() !== y) {\n        h = getAllHolidays(d, adjust);\n        y = d.year();\n      }\n\n      if (!Object.keys(h).length) { break; }\n\n      for (var hd in h) {\n        var b = false;\n        var ha = arrayify(h[hd]);\n\n        for (var hi = 0; hi < ha.length; hi++) {\n          if (d.isSame(ha[hi], 'day')) {\n            w.push(ha[hi]);\n            b = true;\n            break;\n          }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n\n    return w;\n  };\n\n  moment.holidays = {\n    active: {},\n    active_last: {}\n  };\n\n  moment.modifyHolidays = {\n    set: function(holidays, specifics) {\n      var newH = {};\n\n      if (holidays.constructor === Array) {\n        var hs = [];\n\n        for (var i = 0; i < holidays.length; i++) {\n          var d = findHoliday(this, holidays[i], null, false);\n          if (d) { hs = hs.concat(d); }\n        }\n\n        if (hs.length) {\n          newH = merge(moment.holidays.active);\n\n          for (var hd in newH) {\n            if (!newH.hasOwnProperty(hd)) { continue; }\n            if (!~hs.indexOf(hd)) { delete(newH[hd]); }\n          }\n        }\n      } else if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { newH[k[i]] = merge(locale[k[i]]); }\n          } else {\n            newH = merge(locale);\n          }\n        }\n      } else {\n        newH = holidays;\n      }\n\n      if ((Object.keys(newH).length || holidays === newH) && !Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    add: function(holidays, specifics) {\n      if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n        holidays = {};\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { holidays[k[i]] = merge(locale[k[i]]); }\n          } else {\n            holidays = locale;\n          }\n        }\n      }\n\n      if (Object.keys(holidays).length) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = merge(moment.holidays.active, holidays);\n      }\n\n      return this;\n    },\n\n    remove: function(holidays) {\n      holidays = arrayify(holidays);\n\n      var find = findHolidays(this, holidays, false, false);\n      var newH = merge(moment.holidays.active);\n\n      if (find) {\n        for (var i = 0; i < find.length; i++) { delete(newH[find[i]]); }\n      }\n\n      if (!Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    undo: function() {\n      var c = merge(moment.holidays.active);\n      moment.holidays.active = merge(moment.holidays.active_last);\n      moment.holidays.active_last = c;\n      return this;\n    },\n\n    load: function(locales) {\n      locales = arrayify(locales);\n      for (var i = 0; i < locales.length; i++) { getLocale(locales[i]); }\n      return this;\n    },\n\n    extendParser: function(func) {\n      parserExtensions.push(func);\n      return this;\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Argentina\n//! author : NahuelOvejero : https://github.com/NahuelOvejero\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.argentina = {\n    \"Año Nuevo\": {\n      date: '1/1',\n      keywords: ['ano', 'new', 'year']\n    },\n    \"Lunes de Carnival\": {\n      date: 'easter-48',\n      keywords: ['festival']\n    },\n    \"Martes de Carnival\": {\n      date: 'easter-47',\n      keywords: ['festival'],\n    },\n    \"Día de la Memoria por la Verdad y la Justicia\": {\n      date: '3/24',\n    },\n    \"Día del Veterano de Guerra y los Caídos en las Islas Malvinas\": {\n      date: '4/2',\n      keywords: ['caidos']\n    },\n    \"Jueves Santo\" : {\n      date: 'easter-3',\n      keywords: ['festividad', 'cristina']\n    },\n    \"Viernes Santo\": {\n      date: 'easter-2',\n      keywords: ['festividad', 'cristina']\n    },\n    \"Día de Acción por la tolerancia y el respeto entre los pueblos\": {\n      date: '4/24',\n      keywords: ['accion', 'pueblo']\n    },\n    \"Día del Trabajador\": {\n      date: '5/1',\n      keywords: ['labor', 'labour']\n    },\n    \"Día de la Revolución de Mayo\": {\n      date: '5/25',\n      keywords: ['revolucion', 'revolution']\n    },\n    \"Día Paso a la Inmortalidad del Gral. Manual Belgrano\": {\n      date: '6/20',\n      keywords: ['bandera', 'flag']\n    },\n    \"Día de la Independencia\": {\n      date: '7/9',\n      keywords: ['independence']\n    },\n    \"Paso a la Inmortalidad del Gral. José de San Martín\": {\n      date: '8/(1,3)',\n      keywords: ['martin', 'jose', 'saint', 'st[\\\\s\\\\.]']\n    },\n    \"Día del Respeto a la Diversidad Cultural\": {\n      date: '10/(1,2)',\n      keywords: ['christopher', 'columbus', 'culture']\n    },\n    \"Día de la Soberanía Nacional\": {\n      date: '11/(1,4)',\n      keywords: ['soberania', 'sovereignty']\n    },\n    \"Navidad\": {\n      date: '12/25',\n      keywords: ['christmas']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Canada\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      AB : Alberta\n      BC : British Columbia\n      MB : Manitoba\n      NB : New Brunswick\n      NL : Newfoundland and Labrador\n      NS : Nova Scotia\n      NT : Northwest Territories\n      NU : Nunavut\n      ON : Ontario\n      PE : Prince Edward Island\n      QC : Quebec\n      SK : Saskatchewan\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.canada = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Islander Day\": {\n      date: '2/(1,2)',\n      keywords_y: ['island'],\n      regions: ['pe']\n    },\n    \"Family Day\": {\n      date: '2/(1,3)',\n      regions: ['ab', 'bc', 'on', 'sk']\n    },\n    \"Louis Riel Day\": {\n      date: '2/(1,3)',\n      regions: ['mb']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n    \"Victoria Day\": {\n      date: '5/(1,[-24])',\n      regions_n: ['nb', 'nl', 'ns']\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Aboriginal Day\": {\n      date: '6/21',\n      regions: ['nt']\n    },\n    \"Saint Jean Baptiste Day\": {\n      date: '6/24',\n      keywords: ['st[\\\\s\\\\.]'],\n      regions: ['qc']\n    },\n    \"Canada Day\": {\n      date: '7/1',\n    },\n    \"Civic Day\": {\n      date: '8/(1,1)',\n      regions: ['ab', 'bc', 'nb', 'nu', 'on', 'sk']\n    },\n    \"Labour Day\": {\n      date: '9/(1,1)',\n      keywords: ['labor']\n    },\n    \"Halloween\": {\n      date: '10/31',\n    },\n    \"Remembrance Day\": {\n      date: '11/11',\n      regions_n: ['mb', 'ns', 'on', 'qc']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after'],\n      regions_n: ['nb', 'nl', 'ns']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Croatia / Hrvatska\n//! author : diomed : https://github.com/diomed\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.croatia = {\n    \"Nova Godina\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Bogojavljenje\": {\n      date: '1/6',\n      keywords: ['tri kralja']\n    },\n    \"Uskrs\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday']\n    },\n    \"Uskrsni ponedjeljak\": {\n      date: 'easter+1',\n      keywords: ['uskršnji', 'easter', 'monday']\n    },\n    \"Praznik rada\": {\n      date: '5/1'\n    },\n    \"Tijelovo\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi']\n    },\n    \"Dan antifašističke borbe\": {\n      date: '6/22',\n      keywords: ['antifasisticke']\n    },\n    \"Dan državnosti\": {\n      date: '6/25',\n      keywords: ['drzavnost', 'domovinske', 'domovinska']\n    },\n    \"Dan zahvalnosti\": {\n      date: '8/5',\n      keywords: ['domovinske', 'thanksgiving']\n    },\n    \"Velika Gospa\": {\n      date: '8/15'\n    },\n    \"Dan neovisnosti\": {\n      date: '10/8',\n      keywords: ['nezavisnosti', 'independence']\n    },\n    \"Dan svih svetih\": {\n      date: '11/1',\n      keywords: ['svi sveti', 'sesvete', 'sisvete']\n    },\n    \"Božić\": {\n      date: '12/25',\n      keywords: ['bozic', 'christmas']\n    },\n    \"Sveti Stjepan\": {\n      date: '12/26',\n      keywords: ['sv[\\\\s\\\\.]']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Denmark\n//! author : Alexander Køpke : https://github.com/alexanderkopke\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.denmark = {\n    \"Nytårsdag\": {\n      date: '1/1',\n      keywords: ['nytarsdag', 'new', 'years']\n    },\n    \"Skærfredag\": {\n      date: 'easter-2',\n      keywords: ['skaerfredag', 'good', 'friday']\n    },\n    \"Påske\": {\n      date: 'easter',\n      keywords: ['paske', 'easter', 'sunday'],\n    },\n    \"Anden påskedag\": {\n      date: 'easter+1',\n      keywords: ['andenpåskedag', 'andenpaskedag', 'paskedag', 'easter', 'monday']\n    },\n    \"Første maj\": {\n      date: '5/1',\n      keywords: ['førstemaj', 'forstemaj', 'forste', 'maj']\n    },\n    \"Kristi himmelfart\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pinse\": {\n      date: 'easter+49',\n      keywords: ['pentecost']\n    },\n    \"Anden pinse\": {\n      date: 'easter+50',\n      keywords: ['andenpinsedag', 'pinsedag', 'whit', 'monday']\n    },\n    \"Juleaften\": {\n      date: '12/24',\n      keywords: ['christmas']\n    },\n    \"Anden juledag\": {\n      date: '12/25',\n      keywords: ['andenjuledag'],\n      keywords_y: ['anden']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Easter Related Holidays\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.easter = {\n    \"Ash Wednesday\": {\n      date: 'easter-46'\n    },\n    \"Lent\": {\n      date: 'easter-46|easter-3'\n    },\n    \"Maundy Thursday\": {\n      date: 'easter-3',\n      keywords_y: ['maundy', 'thursday']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Holy Saturday\": {\n      date: 'easter-1',\n      keywords_y: ['holy', 'saturday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1',\n      keywords_y: ['easter', 'monday']\n    },\n    \"Ascension Day\": {\n      date: 'easter+39'\n    },\n    \"Pentecost Sunday\": {\n      date: 'easter+49',\n      keywords_y: ['pentecost'],\n      keywords: ['sunday']\n    },\n    \"Whit Monday\": {\n      date: 'easter+50',\n      keywords_y: ['whit'],\n      keywords: ['monday']\n    },\n    \"Corpus Christi\": {\n      date: 'easter+60',\n      keywords: ['feast']\n    }\n  };\n\n  var easter = function(y) {\n    var c = Math.floor(y / 100);\n    var n = y - 19 * Math.floor(y / 19);\n    var k = Math.floor((c - 17) / 25);\n    var i = c - Math.floor(c / 4) - Math.floor((c - k) / 3) + 19 * n + 15;\n    i = i - 30 * Math.floor((i / 30));\n    i = i - Math.floor(i / 28) * (1 - Math.floor(i / 28) * Math.floor(29 / (i + 1)) * Math.floor((21 - n) / 11));\n    var j = y + Math.floor(y / 4) + i + 2 - c + Math.floor(c / 4);\n    j = j - 7 * Math.floor(j / 7);\n    var l = i - j;\n    var m = 3 + Math.floor((l + 40) / 44);\n    var d = l + 28 - 31 * Math.floor(m / 4);\n    return moment([y, (m - 1), d]);\n  };\n\n  moment.modifyHolidays.extendParser(function(m, date){\n    if (~date.indexOf('easter')) {\n      var dates = date.split('|');\n      var ds = [];\n\n      for (i = 0; i < dates.length; i++) {\n        if (dates[i].substring(0, 6) === 'easter') {\n          var e = easter(m.year());\n\n          if (dates[i].charAt(6) === '-') { e.subtract(dates[i].substring(7), 'days'); }\n          if (dates[i].charAt(6) === '+') { e.add(dates[i].substring(7), 'days'); }\n\n          if (dates.length === 1) { return e; }\n          ds.push(e.format('M/D'));\n        } else {\n          ds.push(dates[i]);\n        }\n      }\n\n      if (ds.length) { return ds.join('|'); }\n    }\n  });\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Finland\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.finland = {\n    \"Uudenvuodenpäivä\": {\n      date: '1/1',\n      keywords: ['uudenvuodenpaiva', 'new', 'year']\n    },\n    \"Loppiainen\": {\n      date: '1/6'\n    },\n    \"Vappu\": {\n      date: '5/1'\n    },\n    \"Juhannuspäivä\": {\n      date: '6/(6,[21])',\n      keywords: ['juhannuspaiva']\n    },\n    \"Pyhäinpäivä\": {\n      date: '11/(6,[1])',\n      keywords: ['pyhainpaiva']\n    },\n    \"Joulupäivä\": {\n      date: '12/25',\n      keywords: ['joulupaiva', 'christmas']\n    },\n    \"Tapaninpäivä\": {\n      date: '12/26',\n      keywords: ['tapaninpaiva']\n    },\n    \"Pitkäperjantai\": {\n      date: 'easter-2',\n      keywords: ['pitkaperjantai', 'good', 'friday']\n    },\n    \"Pääsiäispäivä\": {\n      date: 'easter',\n      keywords: ['paasiaispaiva', 'easter'],\n      keywords_n: ['toinen', 'monday']\n    },\n    \"Toinen Pääsiäispäivä\": {\n      date: 'easter+1',\n      keywords: ['paasiaispaiva', 'easter', 'monday'],\n      keywords_y: ['toinen']\n    },\n    \"Helatorstai\": {\n      date: 'easter+39',\n      keywords: ['ascension']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Germany\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      BB : Brandenburg\n      BW : Baden-Württemberg\n      BY : Bayern\n      HE : Hessen\n      MV : Mecklenburg-Vorpommern\n      NW : Nordrhein-Westfalen\n      RP : Rheinland-Pfalz\n      SN : Sachsen\n      SL : Saarland\n      ST : Sachsen-Anhalt\n      TH : Thüringen\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.germany = {\n    \"Neujahrstag\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Karfreitag\": {\n      date: 'easter-2',\n      keywords: ['good', 'friday']\n    },\n    \"Ostersonntag\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday'],\n      regions: ['bb']\n    },\n    \"Ostermontag\": {\n      date: 'easter+1',\n      keywords: ['easter', 'monday']\n    },\n    \"Heilige Drei Könige\": {\n      date: '1/6',\n      keywords: ['konige'],\n      regions: ['bw', 'by', 'st']\n    },\n    \"Maifeiertag\": {\n      date: '5/1'\n    },\n    \"Christi Himmelfahrt\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pfingstsonntag\": {\n      date: 'easter+49',\n      keywords: ['pentecost'],\n      regions: ['bb']\n    },\n    \"Pfingstmontag\": {\n      date: 'easter+50',\n      keywords: ['whit', 'monday']\n    },\n    \"Fronleichnam\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi'],\n      regions: ['bw', 'by', 'he', 'nw', 'rp', 'sl']\n    },\n    \"Mariä Himmelfahrt\": {\n      date: '8/15',\n      keywords: ['maria'],\n      regions: ['sl']\n    },\n    \"Tag der deutschen Einheit\": {\n      date: '10/3'\n    },\n    \"Reformationstag\": {\n      date: '10/31',\n      regions: ['bb', 'mv', 'sn', 'st', 'th']\n    },\n    \"Allerheiligen\": {\n      date: '11/1',\n      regions: ['bw', 'by', 'nw', 'rp', 'sl']\n    },\n    \"Buß- und Bettag\": {\n      date: '11/(3,[17])',\n      keywords: ['bub'],\n      regions: ['sn']\n    },\n    \"Weihnachten\": {\n      date: '12/24',\n      keywords: ['christmas']\n    },\n    \"Zweiter Weihnachtsfeiertag\": {\n      date: '12/26',\n      keywords_y: ['zweiter']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : India\n//! author : wonder2991 : https://github.com/wonder2991\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.india = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['naya', 'saal']\n    },\n    \"Republic Day\": {\n      date: '1/26',\n      keywords: ['ganatantr']\n    },\n    \"Mahavir Jayanti\": {\n      date: '4/9',\n      keywords: ['birthday']\n    },\n    \"May Day\": {\n      date: '5/1',\n      keywords: ['labour']\n    },\n    \"Independence Day\": {\n      date: '8/15',\n      keywords: ['svatantrata']\n    },\n    \"Gandhi Jayanti\": {\n      date: '10/02',\n      keywords: ['birthday']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : United States\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.united_states = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve']\n    },\n    \"Martin Luther King Jr. Day\": {\n      date: '1/(1,3)',\n      keywords: ['mlk']\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Washington's Birthday\": {\n      date: '2/(1,3)',\n      keywords: ['george', 'president', 'day']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Memorial Day\": {\n      date: '5/(1,-1)'\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Independence Day\": {\n      date: '7/4',\n      keywords: ['4th', 'fourth', 'july']\n    },\n    \"Labor Day\": {\n      date: '9/(1,1)',\n      keywords: ['labour']\n    },\n    \"Columbus Day\": {\n      date: '10/(1,2)',\n      keywords: ['christopher']\n    },\n    \"Halloween\": {\n      date: '10/31'\n    },\n    \"Veteran's Day\": {\n      date: '11/11',\n      keywords: ['vet']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after']\n    },\n    \"Day after Thanksgiving\": {\n      date: '11/(5,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_y: ['after']\n    },\n    \"Christmas Eve\": {\n      date: '12/24',\n      keywords: ['christ', 'x-?mas'],\n      keywords_y: ['eve']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"New Year's Eve\": {\n      date: '12/31',\n      keywords_y: ['year', 'eve']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n"]}